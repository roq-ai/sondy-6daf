generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model invitation {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id String?       @db.Uuid
  invited_by      String?       @db.Uuid
  email           String        @db.VarChar(255)
  status          String        @db.VarChar(255)
  role            String?       @db.VarChar(255)
  expiry_date     DateTime?     @db.Timestamp(6)
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  user            user?         @relation(fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?      @db.VarChar(255)
  address     String?      @db.VarChar(255)
  city        String?      @db.VarChar(255)
  state       String?      @db.VarChar(255)
  zip         String?      @db.VarChar(255)
  name        String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_id     String       @db.Uuid
  tenant_id   String       @db.VarChar(255)
  invitation  invitation[]
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  survey      survey[]
}

model question {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text       String     @db.VarChar(255)
  type       String     @db.VarChar(255)
  survey_id  String?    @db.Uuid
  option_1   String?    @db.VarChar(255)
  option_2   String?    @db.VarChar(255)
  option_3   String?    @db.VarChar(255)
  option_4   String?    @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  survey     survey?    @relation(fields: [survey_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  response   response[]
}

model response {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String?   @db.Uuid
  question_id String?   @db.Uuid
  answer      String    @db.VarChar(255)
  survey_id   String?   @db.Uuid
  comment     String?   @db.VarChar(255)
  rating      Int?
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  question    question? @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  survey      survey?   @relation(fields: [survey_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model survey {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String        @db.VarChar(255)
  description     String?       @db.VarChar(255)
  organization_id String?       @db.Uuid
  start_date      DateTime?     @db.Timestamp(6)
  end_date        DateTime?     @db.Timestamp(6)
  status          String?       @db.VarChar(255)
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  question        question[]
  response        response[]
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  invitation   invitation[]
  organization organization[]
  response     response[]
}
